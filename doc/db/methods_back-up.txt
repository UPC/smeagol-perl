perl script/server_create.pl model DB DBIC::Schema V2::Server::Schema create=static components=TimeStamp,InflateColumn dbi:SQLite:smeagol.db on_connect_do="PRAGMA foreign_keys = ON"

----------Resource------------------


sub get_resources {
    my ($self) = @_;

    my @resource;
    my @resources;

    foreach ($self) {
        @resource = {
            id          => $_->id,
            description => $_->description,
            info        => $_->info,
            tags        => $_->tag_list,
        };
        push( @resources, @resource );
    }

    return @resources;

}

sub tag_list {
    my ($self) = @_;

    my @tags;
    my @tag;

    foreach my $tag ( $self->resource_tags ) {
        my @tag = { id => $tag->tag_id, };
        push( @tags, @tag );
    }

    return ( \@tags );
}

------------Event---------------

sub hash_event {
    my ($self) = @_;

    my @event = {
        id          => $self->id,
        info        => $self->info,
        description => $self->description,
        starts      => $self->starts->iso8601(),
        ends        => $self->ends->iso8601(),
    };
}

---------------Booking--------------------
use DateTime::Span;

sub hash_booking {
    my ($self) = @_;

    my @booking = {
        id          => $self->id,
        id_resource => $self->id_resource->id,
        id_event    => $self->id_event->id,
        starts      => $self->starts->iso8601(),
        ends        => $self->ends->iso8601(),
    };
    return \@booking;
}

sub overlap {
    my ( $self, $current_set ) = @_;
    my $overlap         = 0;
    my $old_booking_set = DateTime::Span->from_datetimes(
        (   start => $self->starts,
            end   => $self->ends->clone->subtract( seconds => 1 )
        )
    );

    if ( $old_booking_set->intersects($current_set) ) {
        $overlap = 1;
    }

    return $overlap;
}