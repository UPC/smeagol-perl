El projecte Sméagol
===================

:author: A. Aguilera, E. Formentí, F. Morillas, 
         A. Muntada, I. Polo, S. Vila 
:date:   26 de febrer de 2009



Índex
-----
 
* Context
* Objectius del projecte
* Aspectes tècnics
* Avaluació d'aquesta fase
* Arquitectura i estat del projecte
* Següents passos


La UPC és gran i heterogènia
----------------------------

* Els TIC UPC estan dispersos: 

   - Geogràficament
   - Funcionalment
   - Laboralment
   - Tecnològicament

* Els TIC UPC han de satisfer moltes demandes semblants 
  però no idèntiques i no tenen prou recursos: cal una solució



No silver bullet
----------------

* Cap d'aquestes polítiques des de dalt és solució:

  - El «ja s'ho faran»
  - El «despotisme il·lustrat»
  - La «subcontractació de serveis»

* Cap d'aquestes polítiques des de baix és solució:

  - Els veïns que s'espavilin
  - La postura «kalimero»
  - La fugida endavant



Sméagol: un petit pas
---------------------

* Cal incentivar una cultura de col·laboració des d'una
  òptica confederal: col·laborem perquè ens surt a compte
  i hi sortim guanyant.

* Sméagol és un petit pas en aquesta direcció.
   


Sméagol: objectius generals
---------------------------

* Avançar en la col·laboració aprenent de les comunitats de 
  desenvolupadors de programari lliure.
* Aprendre a usar certes eines col·laboratives
* Aprofitar algunes idees tecnològiques
* Acabar tenint software compartit entre grups
* Adquirir experiència
* Animar el cotarro



Sméagol: estratègia
-------------------

* Buscar un projecte software:

  - Prou simple (i prou complex)
  - D'interès per als participants
  - Que pugui arrapinyar-se recursos
  
* Sméagol: El gestor de reserves de recursos

* Definir:
  
  - Una primera fita: simple i abastable
  - Una arquitectura
  - ... i... llençar-se a la piscina!




Metodologies àgils
------------------

* Les (grans) especificacions són irreals i molt cares
* L'ús és el millor especificador
* És més rentable fer i refer
* Cal tenir 

  - arquitectures soft
  - mètodes de treball
  
  que ho permetin
* Cicles d'especificació-implementació-release molt curts



Test Driven Development
-----------------------

* Una de les eines que dónen suport a les metodologies de desenvolupament
  àgil:

  1) Determinar què ha de fer un mòdul
  2) Escriure un conjunt de tests que ho comproven
  3) Implementar el mòdul «lluitant contra els tests»

* Hi ha eines ad-hoc per usar la tècnica
* Milloren el problemes de regressió
* Els tests serveixen d'exemples i documenten
* Nous errors impliquen nous tests




REST
----

* Un model per entendre la semàntica de la web (HTTP)
* Si seguim el model les coses van bé:

  - L'usuari se sent a casa
  - Els clients funcionen bé
  - El sistema és escalable i robust
  - L'aplicació és part del món



Conceptes REST
--------------

* Client/servidor
* Recurs = entitat identificable
* URL = identificador d'una entitat
* 1 recurs té N representacions
* HTTP i operacions (GET, PUT, DELETE, POST, ...)



Principis REST
--------------

* Estat aplicació + funcionalitat => recursos
* Significat dels recursos invariant en el temps
* Cada recurs té un URL
* Es transmet la **representació** d'un recurs.
* Un recurs té diverses representacions negociables.
* Mètodes del protocol HTTP => semàntica CRUD



SOA: SOAP vs. REST
------------------



Exemples REST i no REST
-----------------------





Avaluació d'aquesta fase
------------------------


